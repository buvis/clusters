---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
    - name: ingress-nginx
      namespace: kube-tools
    - name: cert-manager
      namespace: kube-tools
    - name: authentik
      namespace: security
    - name: openebs
      namespace: storage
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      server:
        pod:
          annotations:
            kubernetes.io/ingress-bandwidth: 40M
            kubernetes.io/egress-bandwidth: 40M
        containers:
          server:
            image:
              repository: haveagitgat/tdarr
              tag: 2.40.01@sha256:4a9a20b71752eb6f770aba30247b1403e4c9ed2602453ffdd073e9fae25b4dfd
      node:
        pod:
          annotations:
            kubernetes.io/ingress-bandwidth: 40M
            kubernetes.io/egress-bandwidth: 40M
        containers:
          node:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.40.01@sha256:ac6d8451148b311d99be1e0e3978bc866009ee412f9644f521374a5dd7f3c4c5
            env:
              serverIP: tdarr.media.svc.cluster.local
              ffmpegPath: "/usr/local/bin/ffmpeg"
              nodeName: tdarr-node
              nodeID: tdarr-node
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        advancedMounts:
          server:
            server:
              - path: /app/server
                subPath: server
      media:
        enabled: true
        existingClaim: nas-media-videos
        globalMounts:
          - path: /media/videos
      cache:
        enabled: true
        existingClaim: tdarr-cache
        globalMounts:
          - path: /cache
    service:
      tdarr:
        controller: server
        ports:
          http:
            port: 8265
          server:
            port: 8266
    ingress:
      tdarr:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &hostName tdarr.buvis.net
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: tdarr
                  port: http
        tls:
          - hosts:
              - *hostName
            secretName: tdarr-crt
