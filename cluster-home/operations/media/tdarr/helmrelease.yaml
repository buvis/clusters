---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
    - name: ingress-nginx
      namespace: kube-tools
    - name: cert-manager
      namespace: kube-tools
    - name: authentik
      namespace: security
    - name: openebs
      namespace: storage
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      server:
        containers:
          server:
            image:
              repository: haveagitgat/tdarr
              tag: 2.32.01@sha256:347b25b14d54594bffa705eb2423aa1728ea78a045f6c9205276c15f55bc8eea
      node:
        replicas: 4
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - jellyfin
                  topologyKey: "kubernetes.io/hostname"
        containers:
          node:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.33.01@sha256:da5e8224f4cec994460232981d4ff94e126b074a8840e84f69ed2a5c3bf8beee
            env:
              serverIP: tdarr.media.svc.cluster.local
              ffmpegPath: "/usr/local/bin/ffmpeg"
              nodeName:
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            securityContext:
              allowPrivilegeEscalation: true
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        advancedMounts:
          server:
            server:
              - path: /app/server
                subPath: server
      media:
        enabled: true
        existingClaim: nas-media-videos
        globalMounts:
          - path: /media/videos
      transcode:
        type: hostPath
        hostPath: /tmp
        globalMounts:
          - path: /transcode
    service:
      tdarr:
        controller: server
        ports:
          http:
            port: 8265
          server:
            port: 8266
    ingress:
      tdarr:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &hostName tdarr.buvis.net
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: tdarr
                  port: http
        tls:
          - hosts:
              - *hostName
            secretName: tdarr-crt
