---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
    - name: ingress-nginx
      namespace: kube-tools
    - name: cert-manager
      namespace: kube-tools
    - name: authentik
      namespace: security
    - name: longhorn
      namespace: storage
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 100
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 44 # video
          - 125 # render
          - 105 # render
          - 568
    controllers:
      server:
        pod:
          annotations:
            kubernetes.io/ingress-bandwidth: 40M
            kubernetes.io/egress-bandwidth: 40M
        containers:
          server:
            image:
              repository: haveagitgat/tdarr
              tag: 2.47.01@sha256:d3a6c63255e63a1c90f2db86c68947c547b0b477b1cbef6b3102ca6d1077675a
      node:
        pod:
          annotations:
            kubernetes.io/ingress-bandwidth: 40M
            kubernetes.io/egress-bandwidth: 40M
        containers:
          node:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.48.01@sha256:19bd23303defefa77aca01a8bc93abb6dcab685137f74ae0885071a709f4fcd8
            env:
              serverIP: tdarr.media.svc.cluster.local
              ffmpegPath: "/usr/local/bin/ffmpeg"
              nodeName: tdarr-node
              nodeID: tdarr-node
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        advancedMounts:
          server:
            server:
              - path: /app/server
                subPath: server
      media:
        enabled: true
        existingClaim: nas-media-videos
        globalMounts:
          - path: /media/videos
      cache:
        enabled: true
        existingClaim: tdarr-cache
        globalMounts: []
        advancedMounts:
          node:
            node:
              - path: /cache
                readOnly: false
    service:
      tdarr:
        controller: server
        ports:
          http:
            port: 8265
          server:
            port: 8266
    ingress:
      tdarr:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &hostName tdarr.buvis.net
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: tdarr
                  port: http
        tls:
          - hosts:
              - *hostName
            secretName: tdarr-crt
