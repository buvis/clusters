---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  dependsOn:
    - name: ingress-nginx
      namespace: kube-tools
    - name: cert-manager
      namespace: kube-tools
    - name: authentik
      namespace: security
    - name: openebs
      namespace: storage
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    defaultPodOptions:
      annotations:
        vpn/gluetun-inject: "true"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 985
    controllers:
      qbittorrent:
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.3@sha256:ef7b54df65ed34aec0809024061fc55b322cc8b3882dfebde499fb3f50f5bb62
            env:
              UMASK: "022"
              QBT_TORRENTING_PORT: ${SECRET_VPN_BT_FORWARD_PORT}
              QBT_WEBUI_PORT: 8080
            resources:
              requests:
                cpu: 49m
                memory: 765Mi
              limits:
                memory: 1426Mi
    hostname: torr
    settings:
      automaticPortSetup: false
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      downloads:
        enabled: true
        existingClaim: nas-media-downloads
    service:
      app:
        controller: qbittorrent
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_IP_BITTORRENT}
        ports:
          http:
            enabled: true
            port: 8080
            protocol: TCP
            targetPort: 8080
          bittorrent:
            enabled: true
            port: ${SECRET_VPN_BT_FORWARD_PORT}
            protocol: TCP
            targetPort: ${SECRET_VPN_BT_FORWARD_PORT}
    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &hostName qb.buvis.net
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *hostName
            secretName: qbittorrent-crt
