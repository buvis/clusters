---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  dependsOn:
    - name: ingress-nginx
      namespace: kube-tools
    - name: cert-manager
      namespace: kube-tools
    - name: authentik
      namespace: security
    - name: longhorn
      namespace: storage
    - name: kube-prometheus-stack
      namespace: monitoring
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    defaultPodOptions:
      annotations:
        vpn/gluetun-inject: "true"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 985
    controllers:
      lidarr:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.14.1.4714@sha256:bbb4249fcc135b9c43845be7716b8989c0413dbbf002ccd6d30a49b7b1c674b0
            env:
              LIDARR_API_KEY: ${SECRET_LIDARR_API_KEY}
            resources:
              requests:
                cpu: 15m
                memory: 1024Mi
              limits:
                memory: 4096Mi
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.3.0@sha256:af535d94061cf97a52e1661945ffba78c03f9443eae7c0da1a80a5a4be56b520
            env:
              PORT: "7373"
              URL: "http://lidarr-app.media.svc.cluster.local:8686"
              ENABLE_ADDITIONAL_METRICS: "false"
              ENABLE_UNKNOWN_QUEUE_ITEMS: "false"
              APIKEY: ${SECRET_LIDARR_API_KEY}
            args: ["lidarr"]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 250Mi
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      media:
        enabled: true
        existingClaim: nas-media-music
        globalMounts:
          - path: /media/music
      downloads:
        enabled: true
        existingClaim: nas-media-downloads
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: 8686
      exporter:
        controller: lidarr
        ports:
          http:
            port: 7373
    ingress:
      app:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
          - host: &hostName lidarr.buvis.net
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *hostName
            secretName: lidarr-crt
    serviceMonitor:
      main:
        enabled: true
        serviceName: lidarr-exporter
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
